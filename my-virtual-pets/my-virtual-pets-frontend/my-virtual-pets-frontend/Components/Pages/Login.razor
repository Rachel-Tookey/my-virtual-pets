@page "/log-in"
@using my_virtual_pets_frontend.Components.LoginSignupComponents
@inject NavigationManager NavMan
@inject AuthenticationStateProvider AuthStateProvider
@rendermode InteractiveServer

<PageTitle>log in | my-virtual-pets</PageTitle>
<div class="container">
    <AuthorizeView>
        <NotAuthorized>
            <CascadingValue Value="Refresh">
                <LoginSignupFormSwitcher></LoginSignupFormSwitcher>
            </CascadingValue>
        </NotAuthorized>
        <Authorized>
            <div class="container text-center">
                <h1 class="page-title">logged in, redirecting you to home in: @(_redirectSecondsRemaining)</h1>
            </div>
        </Authorized>
    </AuthorizeView>
</div>

@code {

    public bool Refresh { get; set; } = false; 

    private int _redirectSecondsRemaining = 3;

    protected override async Task OnInitializedAsync()
    {
        // if logged in, kick off redirecttohome
    }
    
    private async Task RedirectToHome()
    {
        int initial = _redirectSecondsRemaining;
        for (int i = 0; i < initial; i++)
        {
            await Task.Delay(1000);
            _redirectSecondsRemaining--;
            StateHasChanged();
        }
        NavMan.NavigateTo("/home");
    }

}