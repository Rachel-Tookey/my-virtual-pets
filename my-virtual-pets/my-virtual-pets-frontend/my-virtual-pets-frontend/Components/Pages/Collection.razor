@page "/collection"
@using my_virtual_pets_class_library.DTO
@using my_virtual_pets_class_library.Enums
@using my_virtual_pets_frontend.Components.DisplayCards
@inject NavigationManager NavMan
@rendermode InteractiveServer

<PageTitle>Collection | MyVirtualPets</PageTitle>

@if (UserId == null)
{
    NavMan.NavigateTo("/login"); 
}
else
{
    <section class="container text-center">
    <div class="container">
        <h1 class="fw-bold py-6">My Collection</h1>
        <button onclick="() => HandleAddPet" class="btn btn-primary my-2">Add Pet</button>
        <hr class="my-4"/>
    </div>
    </section>

            <div class="container">
                <div class="row">
                    <Virtualize Items="_petCardDataDTOs" Context="petCardDataDTO">
                        <PetCard PetCardData="petCardDataDTO" DeleteMethod="DeleteFromCollection"/>
                    </Virtualize>
                </div>
            </div>
}

@code {

    private string UserId = "f3922887-7fc2-447b-a08f-4fbbc663ba81";

    private List<PetCardDataDTO> _petCardDataDTOs = new List<PetCardDataDTO>();
    
    protected override async Task OnInitializedAsync()
    {   
        var client = new BackendClient<List<PetCardDataDTO>>($"api/pets/user/{UserId}");
        _petCardDataDTOs = await client.GetRequest(); 
    }
    
    public async Task DeleteFromCollection(Guid petId)
    {
        
        // call delete request 
        // reload data? 
        throw new NotImplementedException(); 
    }
    
    public async Task HandleAddPet()
    {
        throw new NotImplementedException();
    }

}