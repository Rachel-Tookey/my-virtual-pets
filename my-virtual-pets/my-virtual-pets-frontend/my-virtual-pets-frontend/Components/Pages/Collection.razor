@page "/collection"
@using my_virtual_pets_class_library.DTO
@using my_virtual_pets_frontend.Components.Icons
@using my_virtual_pets_frontend.Components.DisplayCards
@inject NavigationManager NavMan
@rendermode InteractiveAuto

<PageTitle>Collection | MyVirtualPets</PageTitle>

@if (UserId == null)
{
    NavMan.NavigateTo("/login"); 
} else if (_petCardDataDTOs is null) 
{
    <Cat_Loader></Cat_Loader>
}

<section class="container text-center">
    <div class="container">
        <h1 class="fw-bold py-6">My Collection</h1>
        <button onclick="() => HandleAddPet" class="btn btn-primary my-2">Add Pet</button>
        <hr class="my-4"/>
    </div>
</section>

@if (_petCardDataDTOs.Count() > 0)
{
            <div class="container">
                <div class="row">
                    <Virtualize Items="_petCardDataDTOs" Context="petCardDataDTO">
                        <PetCard PetCardData="petCardDataDTO" DeleteMethod="DeleteFromCollection"/>
                    </Virtualize>
                </div>
            </div>
}


@code {

    private string UserId = "f3922887-7fc2-447b-a08f-4fbbc663ba81";

    private List<PetCardDataDTO> _petCardDataDTOs = new List<PetCardDataDTO>();
    
    protected override async Task OnInitializedAsync()
    {   
        var getclient = new BackendClient<List<PetCardDataDTO>>($"api/pets/user/{UserId}");
        _petCardDataDTOs = await getclient.GetRequest(); 
    }
    
    public async Task DeleteFromCollection(Guid petId) {
        Console.WriteLine("CASCADED");
        Console.WriteLine(petId);
        var client = new BackendClient<int>($"api/pets/{petId}");
        await client.DeleteRequest();
        
        var getclient = new BackendClient<List<PetCardDataDTO>>($"api/pets/user/{UserId}");
        _petCardDataDTOs = await getclient.GetRequest(); 
        // _petCardDataDTOs = _petCardDataDTOs.Where(p => p.PetId != petId).ToList(); 
    }
    
    public async Task HandleAddPet()
    {
        throw new NotImplementedException();
    }

}