@using my_virtual_pets_class_library.DTO
@using my_virtual_pets_frontend.Components.AddPetComponents
@using my_virtual_pets_class_library.Enums
@using my_virtual_pets_frontend.Components.Icons

@rendermode InteractiveServer

@page "/add-pet"

<PageTitle>Add a Pet | MyVirtualPets</PageTitle>

<div class="container">
    <h1 class="text-center mb-5">Add a Pet!</h1>
    @if (PetDetails == null)
    {
        <Loader />
    }
    else
    {
        <div id="formcenter">
            <CascadingValue Value="PetDetails">
                @if (!IsSuccessfulUpload)
                {
                    <UploadImageForm OnSuccessfulUpload=@SwitchToAddDetails></UploadImageForm>
                }
                else
                {
                    <AddPetDetailsForm></AddPetDetailsForm>
                }
            </CascadingValue>
        </div>
    }
</div>


@code {
    [CascadingParameter] AddPetDTO? PetDetails { get; set; }

    protected override void OnInitialized()
    {
        ResetPetDetails();
        IsSuccessfulUpload = false;
    }

    private void ResetPetDetails()
    {
        PetDetails = new AddPetDTO()
        {
            PetName = "",
            Description = "",
            ImageUrl = "",
            OwnerId = Guid.NewGuid(), // TODO: get correct guid
            Personality = Enum.GetValues(typeof(Personality)).Cast<Personality>().ToList()[0],
            PetType = PetType.OTHER
        };
    }
    
    public bool IsSuccessfulUpload { get; set; } = false; 

    public void SwitchToAddDetails()
    {
        IsSuccessfulUpload = true;
    }
}