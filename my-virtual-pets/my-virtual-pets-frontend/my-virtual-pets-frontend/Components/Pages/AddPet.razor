@using my_virtual_pets_class_library.DTO
@using my_virtual_pets_frontend.Components.AddPetComponents
@using my_virtual_pets_class_library.Enums
@inject NavigationManager NavMan;

@rendermode InteractiveServer

@page "/add-pet"

<PageTitle>Add a Pet | MyVirtualPets</PageTitle>

<div class="container">
    <h1 class="text-center mb-5">Add a Pet!</h1>
        <div id="formcenter">
            @if (!_isSuccessfulPetPost)
            {
                @if (PetDetails.ImageUrl != "")
                {
                    <div class="d-flex justify-content-center">
                        <figure>
                            <img src="@PetDetails.ImageUrl" alt="" width="300" height="auto"/>
                            <figcaption class="text-success text-center mt-1"><i>Your new VirtualPet!</i></figcaption>
                        </figure>
                    </div>
                }
                else
                {
                    <CascadingValue Value="PetDetails">
                        @if (!_isSuccessfulUpload)
                        {
                            <UploadImageForm OnSuccessfulUpload="@(() => { _isSuccessfulUpload = true; } )"></UploadImageForm>
                        }
                        else
                        {
                            <AddPetDetailsForm OnSuccessfulPetPost="@(() => { _isSuccessfulPetPost = true; } )"></AddPetDetailsForm>
                        }
                    </CascadingValue>
                }
            }
            else
            {
                <h3>Hooray! @PetDetails.PetName is waiting for you in Collection...</h3>
                <button @onclick="@(() => NavMan.NavigateTo("/collection"))" id="submitpetdetailsbutton" class="btn btn-light d-block mx-auto mt-4" type="submit">To Collections!</button>
            }
        </div>
</div>


@code {
    [CascadingParameter] public required AddPetDTO PetDetails { get; set; }

    private bool _isSuccessfulUpload;
    private bool _isSuccessfulPetPost;

    protected override void OnInitialized()
    {
        PetDetails = new()
        {
            PetName = "",
            Description = "",
            ImageUrl = "",
            OwnerId = new Guid("f3922887-7fc2-447b-a08f-4fbbc663ba81"), // TODO: get guids programmatically (This is guid for FurryFriendFan)
            Personality = Enum.GetValues(typeof(Personality)).Cast<Personality>().ToList()[0],
            PetType = PetType.OTHER
        };
        _isSuccessfulUpload = false;
        _isSuccessfulPetPost = false;
    }
}