@using my_virtual_pets_class_library.DTO

<EditForm FormName="Login" Model="@loginDetails" OnInvalidSubmit="HandleInvalidSubmit" OnValidSubmit="HandleValidSubmit">
    <h3 class="pixeltext">Login</h3>
    <h6>@Success</h6>
    <DataAnnotationsValidator/>

        <div class="input form-group">
            <label for="InputUsername">Username:</label>
            <InputText id="InputUsername" class="form-control" @bind-Value="@loginDetails.Username"/>
            <ValidationMessage For="@(() => loginDetails.Username)"/>
        </div>
    
        <div class="input form-group">
            <label for="InputPassword">Password:</label>
            <InputText id="InputPassword" class="form-control" @bind-Value="@loginDetails.Password"/>
            <ValidationMessage For="@(() => loginDetails.Password)"/>
        </div>
    
        <button id="loginbutton" class="btn btn-light input" type="submit">Enter the doghouse</button>

</EditForm>



@code {

    public UserLoginDTO loginDetails { get; set; } 
    
    public string Success { get; set; }
    
    protected override void OnInitialized()
    {
        loginDetails = new UserLoginDTO();
    }

    public void HandleInvalidSubmit()
    {
        Success = "Something has gone wrong"; 
    }

    public void HandleValidSubmit()
    {
        Success = "Submitted!"; 
        var webclient = new BackendClient<UserLoginDTO>("api/user/login");
        webclient.PostRequest(loginDetails);
        loginDetails = new UserLoginDTO();
    }
    
}